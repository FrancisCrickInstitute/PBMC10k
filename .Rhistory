annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
# cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
FNbase <- paste0("Heatmap.",tag,".",VersionPdfExt,".pdf")
FN <- paste0(reportFigDir, FNbase)
FNrel <- paste0("report_figures/", FNbase)
print(HMplotList[[tag]])
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
#row_split = rowSplitVec,
cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
print(HMplotList[[tag]])
rha = rowAnnotation(foo = anno_mark(at = posVec, labels = names(posVec)), bar  = anno_text(row.names(mHmBase), gp = gpar(fontsize = 5) ))
ht_opt(
legend_border = "black",
heatmap_border = TRUE,
annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
# cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
print(HMplotList[[tag]])
rha = rowAnnotation(foo = anno_mark(at = posVec, labels = names(posVec)), foo  = anno_text(row.names(mHmBase), gp = gpar(fontsize = 5) ))
ht_opt(
legend_border = "black",
heatmap_border = TRUE,
annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
# cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
# link <- paste0("https://biologic.thecrick.org/",Obio@parameterList$project_id,"/category-view/",Obio@parameterList$HmDisplayCatsFromDb[[k]])
###############################################################################
## Extract ordered matrix                                                    ##
# HMrowOrder <- row.names(mHmBase)[unlist(row_order(HMplotList[[tag]]))]
# HMcolOrder <- colnames(mHmBase)[unlist(column_order(HMplotList[[tag]]))]
#
# dfOutput <- data.frame(dfHmBase[HMrowOrder, HMcolOrder])
# dfOutput[["geneID"]] <- row.names(dfOutput)
## Done                                                                      ##
###############################################################################
print(HMplotList[[tag]])
rha = rowAnnotation(foo = anno_mark(at = posVec, labels = names(posVec), gp = gpar(fontsize = 5)))
rha = rowAnnotation(
#foo = anno_mark(at = posVec, labels = names(posVec)),
bar  = anno_text(row.names(mHmBase) ))
ht_opt(
legend_border = "black",
heatmap_border = TRUE,
annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
# cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
rha = rowAnnotation(
#foo = anno_mark(at = posVec, labels = names(posVec)),
bar  = anno_text(row.names(mHmBase) ))
ht_opt(
legend_border = "black",
heatmap_border = TRUE,
annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
# cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
print(HMplotList[[tag]])
rha = rowAnnotation(
#foo = anno_mark(at = posVec, labels = names(posVec)),
bar  =  anno_text(row.names(mHmBase), gp = gpar(fontsize = 5))
)
ht_opt(
legend_border = "black",
heatmap_border = TRUE,
annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
# cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
print(HMplotList[[tag]])
## Create heatmap plot ##
library(ComplexHeatmap)
library(circlize)
f1 = colorRamp2(seq(-4, 4, length = 3), c("#3060cf", "#fffbbc","#c4463a"))
## Create top annotation and colorbars ##
# from https://www.biostars.org/p/368265/
# from https://bioconductor.statistik.tu-dortmund.de/packages/3.1/bioc/vignettes/ComplexHeatmap/inst/doc/ComplexHeatmap.html
anno <- as.data.frame(colnames(mHmBase))
colnames(anno) <- "Sample"
anno$Group <- sapply(as.vector(anno[,1]), function(x) paste0(unlist(strsplit(x, "_"))[1], "_",unlist(strsplit(x, "_"))[2]))
## Color sample groups in line with the designated sample group color ##
#library(scales)
#hue_pal()(2)
#sample.group <- as.vector(unique(dfDesign$sample.group))
#sample.group_color <- sample.group
#dfDesign <- dfDesign[grep("PE",dfDesign$sample.group),]
#library(scales)
#sample.group_color = hue_pal()(length(sample.group_color))
#dfGroupColors <- unique(data.frame(sample.group, sample.group_color))
#dfDesign<- merge(dfDesign, dfGroupColors, by.x = "sample.group", "sample.group")
FN <- paste0(hpc.mount, "Projects/niakank/rebecca.lea/368A_RNA_seq_KLF17_WT_MT_RN19163/workdir/knl368A.design.file.txt")
dfDesign <- read.delim(FN, header = T, sep = "\t")
df <- unique(data.frame(dfDesign[,c("sample.group", "sample.group_color")], stringsAsFactors = F))
#df$sample.group_color <- as.factor(c("#FF1654", "#247BA0"))
GroupVec <- as.vector(unique(df$sample.group_color))
names(GroupVec) <- as.vector(unique(df$sample.group))
dfDesign.temp <- unique(dfDesign[,c("sample.id", "sample.group")])
df2 <- data.frame(dfDesign.temp[,c("sample.group")])
names(df2) <- "Group"
ha = HeatmapAnnotation(df = df2, col = list(Group = GroupVec, bar = GroupVec),show_legend = c("Group" = FALSE))
rha = rowAnnotation(
#foo = anno_mark(at = posVec, labels = names(posVec)),
bar  =  anno_text(row.names(mHmBase), gp = gpar(fontsize = 3))
)
ht_opt(
legend_border = "black",
heatmap_border = TRUE,
annotation_border = TRUE
)
rowSplitVec <- row.names(mHmBase)
for (i in 1:length(geneSelList)){
rowSplitVec[rowSplitVec %in% geneSelList[[i]]] <- names(geneSelList)[i]
}
colnames(mHmBase) <- gsub("DEseq2NormalizedReadCounts_", "", colnames(mHmBase))
HMplotList[[tag]] = Heatmap(
mHmBase,
column_title = gsub(
"_",
" ",
paste0("Heatmap ")
),
name = "",
#row_km = 5,
col = f1,
show_column_names = T,
show_row_names = F,
border = TRUE,
#Row split
row_split = rowSplitVec,
cluster_columns  = FALSE,
#Dendrogram configurations: columns
clustering_distance_columns="euclidean",
clustering_method_columns="complete",
column_dend_height=unit(10,"mm"),
#Dendrogram configurations: rows
clustering_distance_rows="euclidean",
clustering_method_rows="complete",
row_dend_width=unit(10,"mm"),
top_annotation = ha,
right_annotation = rha,
show_heatmap_legend = TRUE
#row_title = NULL,
#show_row_dend = FALSE
)
ht_opt(RESET = TRUE)
print(HMplotList[[tag]])
GSEADir = paste0(Obio@parameterList$localWorkDir, "GSEA")
logFC.column.name = "logFC"
host = Obio@parameterList$host
refdbname= "reference_categories_db_new"
refDBTableName = Obio@parameterList$enriched.categories.dbTableName
db.user = Obio@parameterList$db.user
db.password = db.pwd
tables = tables
df.dataTable = database.table2
outputDir = Obio@parameterList$outputDir
documentationParams <- list(
"title" = "Mechanisms of stress induced brain sparing in mammals",
"subtitle" = "Gould Lab - Ying Zhang and Patricia Serpente",
"abstract" = "During development, the growth of the brain is protected over that of the fetal body – a phenomenon known as ‘brain sparing’. In mammals, this occurs during asymmetric intrauterine growth restriction (A-IUGR), when the nutrient and/or oxygen supply to the fetus is restricted, often late in gestation. It is already known that brain sparing involves blood diversion towards the brain [1] but molecular mechanisms protecting the growth of neural stem and progenitor cells have yet to be identified. Notably, although the overall size of the brain is protected during A-IUGR, adult offspring are prone to develop neural disorders [2]. In this proposal, I will initiate a mechanistic study of mammalian brain sparing and its long-term effects using a maternal low protein diet (LP) model of A-IUGR recently established in our lab (Figure 1). Multiple mammalian studies indicate that dysregulation of several nutrient-dependent pathways in NSPCs impact upon brain size, including the insulin-like growth factor I/II (IGF-I/II) pathway, the AKT pathway and the mammalian target of rapamycin (mTOR) pathway. Our preliminary data suggest that LP inhibits the activation of IGF1R (Figure 2A). Moreover, phospho-S6, a readout of mTORC1 activation, is depleted in the neuron layer in LP brain but not in the ventricular and subventricular zone (VSVZ, Figure 2B). These data indicate that embryonic neural stem/progenitor cells but not differentiated cells (e.g. neurons) might have an alternative way to activate mTORC1 to support its growth and proliferation. To identify this alternative pathway, and more widely to define the transcriptional stress response to brain sparing, we would like to perform bulk RNA sequencing on dissected STD and LP forebrains. Pilot experiment: Bulk RNA sequencing with 2 conditions (STD vs LP, 3 biological replicates in each condition)
In this first phase, I will collect E18.5 embryos from 5x STD litters and 5x LP litters. Then I will randomly choose 1 embryo per litter and dissect the corresponding forebrains in cold PBS.I will flash frozen the tissue with liquid nitrogen.and store the tissue in -80C. Once I have all the tissue, I will extract RNA together using Trizol/RNeasy Micro kit. Then I will hand over the samples to the ASF for quality control and quantitation prior to cDNA library preparation.
Main experiment: Bulk RNA sequencing with 4 conditions (4 biological replicates in each condition)
If the bulk RNAseq data from the pilot is promising, then I will move to the main experiment. In this stage, I will dissect forebrains from E18.5 embryos from 5x litters (one per litter) in each condition: STD treated with vehicle or Rapamycin, and LP treated with vehicle and Rapamycin (using a concentration of 10 mg/kg per mouse, which I have already used to document effects on brain size, protein expression with antibody markers and cell proliferation.
References (to help the ASF to judge feasibility, add at least one ref that has done bulk RNAseq form E18.5 brains and one that has done scRNAseq from E18.5 mouse brains)
1. Bulk RNA sequencing PMID: 19617558
2. Single cell sequencing PMID: 30635555"
)
setwd("Y:/wY:/working/boeings/Projects/pachnisv/tiffany.heanue/362A_10X_single_cell_RNA_seq_enteric_neurons_nuclei_rerun_SC18139/workdir/")
setwd("Y:/working/boeings/Projects/pachnisv/tiffany.heanue/362A_10X_single_cell_RNA_seq_enteric_neurons_nuclei_rerun_SC18139/workdir/sc_dev/")
library(dplyr)
library(Seurat)
library(ggplot2)
library(tidyverse)
library(tidyr)
library(knitr)
## Setup plot collection object
VersionPdfExt <- paste0(".V", gsub("-", "", Sys.Date()), ".pdf")
if (dir.exists("/Volumes/babs/working/boeings/")){
hpc.mount <- "/Volumes/babs/working/boeings/"
} else if (dir.exists("Y:/working/boeings/")){
hpc.mount <- "Y:/working/boeings/"
} else if (dir.exists("/camp/stp/babs/working/boeings/")){
hpc.mount <- "/camp/stp/babs/working/boeings/"
} else {
hpc.mount <- ""
}
# source(
#     paste0(
#         hpc.mount,
#         "Stefan/protocol_files/github/boeings/packages/packageSourceCode/SBwebtools.pckg.r"
#     )
# )
# source(
#     paste0(
#         hpc.mount,
#         "Stefan/protocol_files/github/boeings/packages/scTools/scTools.r"
#     )
# )
source("assets/scTools.r")
source("assets/SBwebtools.pckg.r")
library(dplyr)
library(Seurat)
library(ggplot2)
library(tidyverse)
library(tidyr)
library(knitr)
## Setup plot collection object
VersionPdfExt <- paste0(".V", gsub("-", "", Sys.Date()), ".pdf")
if (dir.exists("/Volumes/babs/working/boeings/")){
hpc.mount <- "/Volumes/babs/working/boeings/"
} else if (dir.exists("Y:/working/boeings/")){
hpc.mount <- "Y:/working/boeings/"
} else if (dir.exists("/camp/stp/babs/working/boeings/")){
hpc.mount <- "/camp/stp/babs/working/boeings/"
} else {
hpc.mount <- ""
}
# source(
#     paste0(
#         hpc.mount,
#         "Stefan/protocol_files/github/boeings/packages/packageSourceCode/SBwebtools.pckg.r"
#     )
# )
# source(
#     paste0(
#         hpc.mount,
#         "Stefan/protocol_files/github/boeings/packages/scTools/scTools.r"
#     )
# )
source("assets/scTools.r")
source("assets/SBwebtools.pckg.r")
Obio <- setMountingPoint(Obio)
Obio <- setAnalysisPaths(Obio)
Obio <- setCrickGenomeAndGeneNameTable(Obio)
Obio <- createAnalysisFolders(
Obio,
baseDir="/camp/stp/babs/working/boeings/Projects/",
localBaseDir = paste0(hpc.mount, "Projects/")
)
Obio <- setDataBaseParameters(Obio)
Obio <- addGeneAnnotation(Obio)
getwd()
library(dplyr)
library(Seurat)
library(ggplot2)
library(tidyverse)
library(tidyr)
library(knitr)
install.packages("tidyverse")
library(dplyr)
library(Seurat)
library(ggplot2)
library(tidyverse)
library(tidyr)
library(knitr)
?lm
host = Obio@dbDetailList$host
pwd = db.pwd
user = Obio@dbDetailList$db.user
cat.ref.db = Obio@dbDetailList$ref.cat.db
cat.ref.db.table = Obio@parameterList$lab.categories.table
gene.vector = gene.vec
gene.id = refGeneIDcolumn
mm.hs.conversion.file =  paste0(hpc.mount, "Projects/reference_data/20160303.homologene.data.txt")
cat_name = cat.name
cat_type = cat_type
data_source = paste0(Obio@parameterList$labname, " Lab")
comments_1 = ""
comments_2 = ""
new.lab.category.table = FALSE
cat.description.db  = "internal_categories"
cat.description.db.table = "category_description"
cat.description.text = cat.description.text
lab.name = Obio@parameterList$labname
replaceExistingCatName = TRUE
?geom_abline
