lab.name = Obio@parameterList$labname,
replaceExistingCatName = TRUE
)
link <- paste0('Link to an interactive version of <a href="https://',urlString,'/',Obio@parameterList$project_id,'/category-view/',catID,'" target="_blank">this heatmap</a>. ')
}
paste0(
'**Figure ',
figureCount,
':** ',HMname ,' Heatmap showing the most distinct marker genes in each cluster. ' , subsetString,
'Download a pdf of this figure <a href="',FNrel,'" target="_blank">here</a>. ',
link
)
as.vector(unique(dfHMGsel$gene))
dfHMGsel <- data.frame(dfHMG %>% group_by(cluster) %>% top_n(5, avg_diff))
dim(HmGsel)
HMGsel
dfHMGsel
tempVec
dfHMG <- dfGeneralMarkers[dfGeneralMarkers$gene %in% tempVec, ]
dim(dfHMG)
head(dfGeneralMarkers)
unique(dfGeneralMarkers$cluster)
DotPlotSB(
object = OsC,
features = dpGenes,
#cols = cols,
group.by = NULL,
split.by = NULL,
dot.scale = 4,
col.min = 0,
col.max = 5
) + ggtitle(gsub("_", "", tag)) + coord_fixed() + coord_flip() + theme_bw()
dpGene <- geneVec
dpGene <- gene.vec
DotPlotSB(
object = OsC,
features = dpGenes,
#cols = cols,
group.by = NULL,
split.by = NULL,
dot.scale = 4,
col.min = 0,
col.max = 5
) + ggtitle(gsub("_", "", tag)) + coord_fixed() + coord_flip() + theme_bw()
dpGenes
dpGenes <- gene.vec
DotPlotSB(
object = OsC,
features = dpGenes,
#cols = cols,
group.by = NULL,
split.by = NULL,
dot.scale = 4,
col.min = 0,
col.max = 5
) + ggtitle(gsub("_", "", tag)) + coord_fixed() + coord_flip() + theme_bw()
dfPercCellsExpr <- Obio@dataTableList$dfPercCellsExpr
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster", "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
dfDat$cluster <- NULL
dfDat$gene <- NULL
dfClusterResiduals <- Obio@dataTableList$dfClusterResiduals
library(tidyverse)
dfLongResiduals <- data.frame(
dfClusterResiduals %>% pivot_longer(!gene, names_to = "cluster", values_to = "residuals")
)
dfDat$join_col
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster", "gene", "avg_diff", "power")]
head(dfDat)
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
head(dfDat)
names(OsC@meta.data)
h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
h
h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
if (sum(h) == 2){
dfClust <- unique(OsC@meta.data[,"seurat_clusters", "clusterName", "clusterColor"])
}
if (sum(h) == 2){
dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
}
dfClust
dfPercCellsExpr <- Obio@dataTableList$dfPercCellsExpr
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
if (sum(h) == 2){
dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
dfDat <- merge(
dfDat,
dfClust,
by.x = "cluster",
by.y = "seurat_cluster"
)
}
head(dfDat)
head(dfCluster)
dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
head(dfClust)
dfDat <- merge(
dfDat,
dfClust,
by.x = "cluster",
by.y = "seurat_clusters"
)
head(dfDat)
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster", "clusterName", "clusterColor" "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
dfDat$cluster <- NULL
dfDat$gene <- NULL
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster", "clusterName", "clusterColor", "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
dfDat$cluster <- NULL
dfDat$gene <- NULL
head(dfDat)
dfPercCellsExpr <- Obio@dataTableList$dfPercCellsExpr
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
if (sum(h) == 2){
dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
dfDat <- merge(
dfDat,
dfClust,
by.x = "cluster",
by.y = "seurat_clusters"
)
}
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster", "clusterName", "clusterColor", "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
head(dfDat)
dfDat$cluster <- NULL
dfDat$gene <- NULL
## Add residual results ##
dfClusterResiduals <- Obio@dataTableList$dfClusterResiduals
library(tidyverse)
dfLongResiduals <- data.frame(
dfClusterResiduals %>% pivot_longer(!gene, names_to = "cluster", values_to = "residuals")
)
head(dfLongResiduals)
dfLongResiduals <- dfLongResiduals[abs(dfLongResiduals$residuals) > 1, ]
dfLongResiduals$cluster <- gsub("_Residuals", "", dfLongResiduals$cluster)
dfLongResiduals[["join_col"]] <- paste0(
dfLongResiduals$gene,
"_",
dfLongResiduals$cluster
)
dfLongResiduals$gene <- NULL
dfLongResiduals$cluster <- NULL
dfDat <- merge(
dfDat,
dfLongResiduals,
by.x = "join_col",
by.y = "join_col",
all =TRUE
)
head(dfDat)
dfPercCellsExpr <- Obio@dataTableList$dfPercCellsExpr
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
# h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
# if (sum(h) == 2){
#     dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
#
#     dfDat <- merge(
#         dfDat,
#         dfClust,
#         by.x = "cluster",
#         by.y = "seurat_clusters"
#     )
# }
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster",  "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
dfDat$cluster <- NULL
dfDat$gene <- NULL
## Add residual results ##
dfClusterResiduals <- Obio@dataTableList$dfClusterResiduals
library(tidyverse)
dfLongResiduals <- data.frame(
dfClusterResiduals %>% pivot_longer(!gene, names_to = "cluster", values_to = "residuals")
)
dfLongResiduals <- dfLongResiduals[abs(dfLongResiduals$residuals) > 1, ]
dfLongResiduals$cluster <- gsub("_Residuals", "", dfLongResiduals$cluster)
dfLongResiduals[["join_col"]] <- paste0(
dfLongResiduals$gene,
"_",
dfLongResiduals$cluster
)
dfLongResiduals$gene <- NULL
dfLongResiduals$cluster <- NULL
dfDat <- merge(
dfDat,
dfLongResiduals,
by.x = "join_col",
by.y = "join_col",
all =TRUE
)
dfDat[is.na(dfDat)] <- 0
names(dfDat) <- gsub("residuals", "LinearReg_Residuals", names(dfDat))
dfDat <- dfDat[order(dfDat$LinearReg_Residuals, decreasing = T),]
dfDat[["gene"]] <- sapply(
dfDat$join_col, function(x) unlist(strsplit(x, "_"))[1]
)
dfDat[["Cluster"]] <- sapply(
dfDat$join_col, function(x) unlist(strsplit(x, "_C_"))[2]
)
dfDat$join_col <- NULL
dfDat$Cluster <- paste0("Cluster_",dfDat$Cluster, "_C")
dfDat$gene <- substr(dfDat$gene,1,50)
dfDat[["uniqueMarker"]] <- as.character(!duplicated(dfDat$gene))
dfDat$uniqueMarker <- substr(dfDat$uniqueMarker, 1,1)
head(dfDat)
DefaultAssay(OsC) <- "RNA"
my_genes <- rownames(x = OsC@assays$RNA)
exp <- FetchData(OsC, my_genes)
ExprMatrix <- round(as.matrix(colMeans(exp  > 0)) *100,1)
colnames(ExprMatrix)[1] <- "count_cut_off"
dfExprMatrix <- data.frame(ExprMatrix)
dfExprMatrix[["gene"]] <- row.names(dfExprMatrix)
Obio@dataTableList[["dfPercCellsExpr"]] <- dfExprMatrix
## Done calculating percentages of expressed gens                            ##
###############################################################################
###############################################################################
## Create one table per cluster                                              ##
## Add expressed in N percent cells ##
dfPercCellsExpr <- Obio@dataTableList$dfPercCellsExpr
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster",  "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
dfDat$cluster <- NULL
dfDat$gene <- NULL
## Add residual results ##
dfClusterResiduals <- Obio@dataTableList$dfClusterResiduals
library(tidyverse)
dfLongResiduals <- data.frame(
dfClusterResiduals %>% pivot_longer(!gene, names_to = "cluster", values_to = "residuals")
)
###############################################################################
## Calculate Coefficient of variation for no-cluster X genes to find best unique cluster markers
## Done                                                                      ##
###############################################################################
dfLongResiduals <- dfLongResiduals[abs(dfLongResiduals$residuals) > 1, ]
dfLongResiduals$cluster <- gsub("_Residuals", "", dfLongResiduals$cluster)
dfLongResiduals[["join_col"]] <- paste0(
dfLongResiduals$gene,
"_",
dfLongResiduals$cluster
)
dfLongResiduals$gene <- NULL
dfLongResiduals$cluster <- NULL
dfDat <- merge(
dfDat,
dfLongResiduals,
by.x = "join_col",
by.y = "join_col",
all =TRUE
)
dfDat[is.na(dfDat)] <- 0
names(dfDat) <- gsub("residuals", "LinearReg_Residuals", names(dfDat))
dfDat <- dfDat[order(dfDat$LinearReg_Residuals, decreasing = T),]
dfDat[["gene"]] <- sapply(
dfDat$join_col, function(x) unlist(strsplit(x, "_"))[1]
)
dfDat[["Cluster"]] <- sapply(
dfDat$join_col, function(x) unlist(strsplit(x, "_C_"))[2]
)
dfDat$join_col <- NULL
dfDat$gene <- substr(dfDat$gene,1,50)
dfDat[["uniqueMarker"]] <- as.character(!duplicated(dfDat$gene))
dfDat$uniqueMarker <- substr(dfDat$uniqueMarker, 1,1)
h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
if (sum(h) == 2){
dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
}
head(dfClust)
head(dfDat)
dfDat <- merge(
dfDat,
dfClust,
by.x = "Cluster",
by.y = "seurat_clusters"
)
head(dfDat)
dfDat$Cluster <- paste0("Cluster_",dfDat$Cluster, "_C")
tabClusters <- sort(unique(dfDat$clusterName))
chnkVec <- as.vector(NULL, mode="character")
linkGeneView <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view" target = "_blank">GeneView</a>')
linkFeatureView <- paste0('<a href="https://',urlString,'/mdata/',Obio@parameterList$project_id,'/html/FeatureView.html" target="_blank">FeatureView</a>')
#for (i in 1:length(tabClusters)){
#tabLegend = paste0("**Table: ** Positive and negative marker genes for ", tabClusters[i])
tabLegend = paste0("**Table: ** Positive and negative cluster-defining marker genes. Perc_Cells_Expr: Percentage of total cells expressing gene X. Enr in Cluster: Enrichment of gene X in cluster Y. To collapse the table to one particular cluster, type the name of the cluster in the search box.",
"Use the ",linkGeneView," or ",linkFeatureView," functionalities to examine individual genes in more detail. "
)
#dfTempDat <- dfDat[dfDat$cluster == tabClusters[i],]
dfTempDat <- dfDat
dfTempDat <- merge(
dfTempDat,
Obio@dataTableList$dfPercCellsExpr,
by.x = "gene",
by.y = "gene"
)
head(dfTempDat)
tabClusters
dfTempDat <- dfDat
head(dfTempDat)
dfTempDat <- merge(
dfTempDat,
Obio@dataTableList$dfPercCellsExpr,
by.x = "gene",
by.y = "gene"
)
names(dfTempDat) <- gsub("count_cut_off", "Perc_Cells_Expr",names(dfTempDat))
names(dfTempDat) <- gsub("myAUC", "AUC", names(dfTempDat))
names(dfTempDat) <- gsub("[.]", "", names(dfTempDat))
#dtList[[paste0("Table",i)]] <- datatable(dfDat,rownames = FALSE)
if (Obio@parameterList$host == "10.27.241.234"){
urlString <- "biologic.thecrick.org"
} else {
urlString <- "biologic.crick.ac.uk"
}
dfTempDat$gene <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view?query=',dfTempDat$gene,'&exact=TRUE" target="_blank">', dfTempDat$gene, '</a>')
NewChnk <- paste0(
"#### ", names(dtList),
"\n```{r datatable_",
i,", results='asis', echo=F, eval=TRUE, warning=FALSE, fig.cap='",
tabLegend,"'}\n",
"\n",
"\n datatable(dfTempDat,rownames = FALSE,  escape = FALSE)",
"\n cat(  '\n')",
"\n\n\n```\n"
)
chnkVec <- c(
chnkVec,
NewChnk
)
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
library(DT)
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
names(dfTempDat)
paste0(names(dfTempDat), collapse = "','")
orderVec <- c('gene','clusterName','DGE_avg_diff','DGE_power','LinearReg_Residuals','uniqueMarker','Cluster','Perc_Cells_Expr')
orderVec <- orderVec[orderVec %in% names(dfTempDat)]
dfTempDat$gene <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view?query=',dfTempDat$gene,'&exact=TRUE" target="_blank">', dfTempDat$gene, '</a>')
head(dfTempDat)
dfPercCellsExpr <- Obio@dataTableList$dfPercCellsExpr
dfDat <- Obio@dataTableList$dfGeneralMarkersFilt
dfDat$avg_diff <- round(dfDat$avg_diff,2)
dfDat <- dfDat[,c("cluster",  "gene", "avg_diff", "power")]
names(dfDat) <- gsub("avg_diff", "DGE_avg_diff", names(dfDat))
names(dfDat) <- gsub("power", "DGE_power", names(dfDat))
dfDat[["join_col"]] <- paste0(dfDat$gene, "_C_", dfDat$cluster)
dfDat$cluster <- NULL
dfDat$gene <- NULL
## Add residual results ##
dfClusterResiduals <- Obio@dataTableList$dfClusterResiduals
library(tidyverse)
dfLongResiduals <- data.frame(
dfClusterResiduals %>% pivot_longer(!gene, names_to = "cluster", values_to = "residuals")
)
###############################################################################
## Calculate Coefficient of variation for no-cluster X genes to find best unique cluster markers
## Done                                                                      ##
###############################################################################
dfLongResiduals <- dfLongResiduals[abs(dfLongResiduals$residuals) > 1, ]
dfLongResiduals$cluster <- gsub("_Residuals", "", dfLongResiduals$cluster)
dfLongResiduals[["join_col"]] <- paste0(
dfLongResiduals$gene,
"_",
dfLongResiduals$cluster
)
dfLongResiduals$gene <- NULL
dfLongResiduals$cluster <- NULL
dfDat <- merge(
dfDat,
dfLongResiduals,
by.x = "join_col",
by.y = "join_col",
all =TRUE
)
dfDat[is.na(dfDat)] <- 0
names(dfDat) <- gsub("residuals", "LinearReg_Residuals", names(dfDat))
dfDat <- dfDat[order(dfDat$LinearReg_Residuals, decreasing = T),]
dfDat[["gene"]] <- sapply(
dfDat$join_col, function(x) unlist(strsplit(x, "_"))[1]
)
dfDat[["Cluster"]] <- sapply(
dfDat$join_col, function(x) unlist(strsplit(x, "_C_"))[2]
)
dfDat$join_col <- NULL
dfDat$gene <- substr(dfDat$gene,1,50)
dfDat[["uniqueMarker"]] <- as.character(!duplicated(dfDat$gene))
dfDat$uniqueMarker <- substr(dfDat$uniqueMarker, 1,1)
#######################
## Add cluster name
h <- sum(c("clusterName", "clusterColor") %in% names(OsC@meta.data))
if (sum(h) == 2){
dfClust <- unique(OsC@meta.data[,c("seurat_clusters", "clusterName", "clusterColor")])
dfDat <- merge(
dfDat,
dfClust,
by.x = "Cluster",
by.y = "seurat_clusters"
)
}
## Done cluster name
########################
dfDat$Cluster <- paste0("Cluster_",dfDat$Cluster, "_C")
dtList <- list()
tabClusters <- sort(unique(dfDat$clusterName))
chnkVec <- as.vector(NULL, mode="character")
linkGeneView <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view" target = "_blank">GeneView</a>')
linkFeatureView <- paste0('<a href="https://',urlString,'/mdata/',Obio@parameterList$project_id,'/html/FeatureView.html" target="_blank">FeatureView</a>')
#for (i in 1:length(tabClusters)){
#tabLegend = paste0("**Table: ** Positive and negative marker genes for ", tabClusters[i])
tabLegend = paste0("**Table: ** Positive and negative cluster-defining marker genes. Perc_Cells_Expr: Percentage of total cells expressing gene X. Enr in Cluster: Enrichment of gene X in cluster Y. To collapse the table to one particular cluster, type the name of the cluster in the search box.",
"Use the ",linkGeneView," or ",linkFeatureView," functionalities to examine individual genes in more detail. "
)
#dfTempDat <- dfDat[dfDat$cluster == tabClusters[i],]
dfTempDat <- dfDat
## Percent expressed genes
dfTempDat <- merge(
dfTempDat,
Obio@dataTableList$dfPercCellsExpr,
by.x = "gene",
by.y = "gene"
)
names(dfTempDat) <- gsub("count_cut_off", "Perc_Cells_Expr",names(dfTempDat))
names(dfTempDat) <- gsub("myAUC", "AUC", names(dfTempDat))
names(dfTempDat) <- gsub("[.]", "", names(dfTempDat))
#dtList[[paste0("Table",i)]] <- datatable(dfDat,rownames = FALSE)
if (Obio@parameterList$host == "10.27.241.234"){
urlString <- "biologic.thecrick.org"
} else {
urlString <- "biologic.crick.ac.uk"
}
dfTempDat[["ClusterName"]] <- paste0(
'<font color ="',dfTempDat$clusterColor,'">'
)
orderVec <- c('gene','ClusterName','DGE_avg_diff','DGE_power','LinearReg_Residuals','uniqueMarker','Cluster','Perc_Cells_Expr')
orderVec <- orderVec[orderVec %in% names(dfTempDat)]
dfTempDat$gene <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view?query=',dfTempDat$gene,'&exact=TRUE" target="_blank">', dfTempDat$gene, '</a>')
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
dfTempDat[["ClusterName"]] <- paste0(
'<p style="color:',dfTempDat$clusterColor,'">',dfTempDat$clusterName,'</p>'
)
orderVec <- c('gene','ClusterName','DGE_avg_diff','DGE_power','LinearReg_Residuals','uniqueMarker','Cluster','Perc_Cells_Expr')
orderVec <- orderVec[orderVec %in% names(dfTempDat)]
dfTempDat$gene <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view?query=',dfTempDat$gene,'&exact=TRUE" target="_blank">', dfTempDat$gene, '</a>')
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
dfTempDat[["ClusterName"]] <- paste0(
'<p style="color:',dfTempDat$clusterColor,';text-align:center">',dfTempDat$clusterName,'</p>'
)
orderVec <- c('gene','ClusterName','DGE_avg_diff','DGE_power','LinearReg_Residuals','uniqueMarker','Cluster','Perc_Cells_Expr')
orderVec <- orderVec[orderVec %in% names(dfTempDat)]
dfTempDat$gene <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view?query=',dfTempDat$gene,'&exact=TRUE" target="_blank">', dfTempDat$gene, '</a>')
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
dfDat$Cluster <- paste0("Cluster_",dfDat$Cluster, "_C")
dtList <- list()
tabClusters <- sort(unique(dfDat$clusterName))
chnkVec <- as.vector(NULL, mode="character")
linkGeneView <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view" target = "_blank">GeneView</a>')
linkFeatureView <- paste0('<a href="https://',urlString,'/mdata/',Obio@parameterList$project_id,'/html/FeatureView.html" target="_blank">FeatureView</a>')
#for (i in 1:length(tabClusters)){
#tabLegend = paste0("**Table: ** Positive and negative marker genes for ", tabClusters[i])
tabLegend = paste0("**Table: ** Positive and negative cluster-defining marker genes. Perc_Cells_Expr: Percentage of total cells expressing gene X. Enr in Cluster: Enrichment of gene X in cluster Y. To collapse the table to one particular cluster, type the name of the cluster in the search box.",
"Use the ",linkGeneView," or ",linkFeatureView," functionalities to examine individual genes in more detail. "
)
#dfTempDat <- dfDat[dfDat$cluster == tabClusters[i],]
dfTempDat <- dfDat
## Percent expressed genes
dfTempDat <- merge(
dfTempDat,
Obio@dataTableList$dfPercCellsExpr,
by.x = "gene",
by.y = "gene"
)
names(dfTempDat) <- gsub("count_cut_off", "Perc_Cells_Expr",names(dfTempDat))
names(dfTempDat) <- gsub("myAUC", "AUC", names(dfTempDat))
names(dfTempDat) <- gsub("[.]", "", names(dfTempDat))
#dtList[[paste0("Table",i)]] <- datatable(dfDat,rownames = FALSE)
if (Obio@parameterList$host == "10.27.241.234"){
urlString <- "biologic.thecrick.org"
} else {
urlString <- "biologic.crick.ac.uk"
}
dfTempDat[["ClusterName"]] <- paste0(
'<p style="color:',dfTempDat$clusterColor,';text-align:center">',dfTempDat$clusterName,'</p>'
)
orderVec <- c('gene','ClusterName','DGE_avg_diff','DGE_power','LinearReg_Residuals','uniqueMarker','Cluster','Perc_Cells_Expr')
orderVec <- orderVec[orderVec %in% names(dfTempDat)]
dfTempDat$gene <- paste0('<a href="https://',urlString,'/',Obio@parameterList$project_id,'/gene-view?query=',dfTempDat$gene,'&exact=TRUE" target="_blank">', dfTempDat$gene, '</a>')
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
dfTempDat <- dfTempDat[,orderVec]
datatable(dfTempDat,rownames = FALSE,  escape = FALSE)
